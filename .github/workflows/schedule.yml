name: YouTube Shorts Bot

on:
  schedule:
    # Run daily at 10:00 AM UTC
    - cron: '0 10 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      topic:
        description: 'Video topic (optional)'
        required: false
        type: string

jobs:
  create-and-upload-video:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg imagemagick
        # Configure ImageMagick for video processing
        sudo sed -i 's/none/read,write/g' /etc/ImageMagick-6/policy.xml || true
    
    - name: Upgrade pip and install wheel
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        # Install moviepy and its dependencies first
        pip install imageio imageio-ffmpeg
        pip install moviepy==1.0.3
        # Install other requirements
        pip install -r requirements.txt
    
    - name: Verify installations
      run: |
        python -c "import moviepy; print('MoviePy version:', moviepy.__version__)"
        python -c "import google.generativeai; print('Gemini AI imported successfully')"
        python -c "import gtts; print('gTTS imported successfully')"
        ffmpeg -version
    
    - name: Create directories
      run: |
        mkdir -p temp
        mkdir -p credentials
        mkdir -p output
    
    - name: Set up environment variables
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
        YOUTUBE_CLIENT_ID: ${{ secrets.YOUTUBE_CLIENT_ID }}
        YOUTUBE_CLIENT_SECRET: ${{ secrets.YOUTUBE_CLIENT_SECRET }}
      run: |
        echo "GEMINI_API_KEY=${GEMINI_API_KEY}" >> .env
        echo "PEXELS_API_KEY=${PEXELS_API_KEY}" >> .env
        echo "YOUTUBE_CLIENT_ID=${YOUTUBE_CLIENT_ID}" >> .env
        echo "YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}" >> .env
    
    - name: Setup YouTube credentials
      if: ${{ secrets.YOUTUBE_CLIENT_SECRETS != '' }}
      run: |
        echo '${{ secrets.YOUTUBE_CLIENT_SECRETS }}' > credentials/client_secrets.json
        if [ -n "${{ secrets.YOUTUBE_TOKEN_PICKLE }}" ]; then
          echo '${{ secrets.YOUTUBE_TOKEN_PICKLE }}' | base64 -d > credentials/token.pickle
        fi
    
    - name: Test basic functionality
      run: |
        python -c "
        try:
            from script_gen import generate_script
            from voice_gen import generate_voice
            from image_gen import get_background_image
            from video_gen import create_video
            print('✅ All modules imported successfully')
        except ImportError as e:
            print(f'❌ Import error: {e}')
            exit(1)
        "
    
    - name: Run video generation
      run: |
        if [ -n "${{ github.event.inputs.topic }}" ]; then
          python main.py --topic "${{ github.event.inputs.topic }}"
        else
          python main.py
        fi
    
    - name: Upload artifacts (on failure)
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: debug-files
        path: |
          temp/
          *.log
          *.mp4
        retention-days: 7

    - name: Upload successful video
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: generated-video
        path: |
          temp/*.mp4
        retention-days: 30

    - name: Clean up
      if: always()
      run: |
        rm -rf temp/
        rm -f .env
